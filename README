This project contains tools that can be useful when creating web applications in
java or scala using Spring MVC or Vaadin.

Currently the following modules are available:

	--- JAVA ---

se.softhouse.garden.orchid.commons
	This contains an extension to the MessageFormat available in the JDK.
	It provides functionality to use named arguments instead of numbered arguments.

	It also contains a text loader which can load messages from a directory structure,
	local or remote zip files. It uses the same structure as used by properties in java
	except that the key is the path to the file, i.e. the property key a.b.c.d maps 
	to the file a/b/c/d.txt where the suffix might differ. The filename might also 
	contain the locale name, e.g. d_en_US.txt. It is also possible to add property
	files in the structure, they are then interpreted and inserted in the hierarchy.

se.softhouse.garden.orchid.spring
	This module contains utilites for Spring. C
	* Extension to the MessageSource bean to support the OrchidMessageFormat and 
	  OrchidDirectoryLoader provied in the commons module.
	* An alternative to the @Configurable annotation to use to inject spring beans
	  into object which are not known to Spring.

se.softhouse.garden.orchid.vaadin
	Contains addon widgets for the Vaadin framework.Currently the following 
	widgets are available:
	* OrchidInputField - Vaadin TextInput extended with some of the html5 tags.
	* OrchidNumberField - Vaadin TextInput extended with some of the html5 tags
			      and client side script for validating number input.
	
se.softhouse.garden.orchid.demo.publisher
	This is a demo implementation of a Spring MVC application using Orchid Messages.	
	
se.softhouse.garden.orchid.demo.vaadin
	This is a demo implementation of a Vaadin application using Orchid Messages in Java

	--- SCALA ---
	
se.softhouse.garden.orchid.scala.spring
	This module contains some scala vrappers for the functionality available
	in se.softhouse.garden.orchid.spring and some more utilities.

se.softhouse.garden.orchid.scala.demo.vaadin
	This is a demo implementation of a Vaadin application using Orchid Messages in Scala

